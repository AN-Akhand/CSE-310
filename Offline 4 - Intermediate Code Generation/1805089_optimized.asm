.MODEL SMALL
.STACK 100H 

CR EQU 0DH
LF EQU 0AH

.DATA

.CODE

;int main()


main PROC
MOV AX, @DATA
MOV DS, AX

PUSH BP
MOV BP, SP

PUSH 0
PUSH 0
PUSH 0
PUSH 0
PUSH 0
;int x,c[3],y
MOV BX, 0
MOV AX, 1
XCHG   AX, BX
XOR DX, DX
IMUL BX
;0*1
MOV SI, -4
SHL AX, 1
SUB SI, AX
MOV AX, 5
MOV [BP + SI], AX
;c[0*1]=5
MOV AX, 1
;1
MOV SI, -4
SHL AX, 1
SUB SI, AX
MOV AX, 6
MOV [BP + SI], AX
;c[1]=6
MOV AX, 2
;2
MOV SI, -4
SHL AX, 1
SUB SI, AX
PUSH SI
MOV AX, 0
;0
MOV SI, -4
SHL AX, 1
SUB SI, AX
MOV AX, [BP + SI]
PUSH AX
MOV BX, 1
MOV AX, 1
XCHG   AX, BX
XOR DX, DX
IMUL BX
;1*1
MOV SI, -4
SHL AX, 1
SUB SI, AX
MOV AX, [BP + SI]
POP BX
XCHG   AX, BX
XOR DX, DX
IMUL BX
POP SI
MOV [BP + SI], AX
;c[2]=c[0]*c[1*1]
PUSH 0
;int a
MOV SI, -12
PUSH SI
MOV AX, 2
;2
MOV SI, -4
SHL AX, 1
SUB SI, AX
MOV AX, [BP + SI]
POP SI
MOV [BP + SI], AX
;a=c[2]
MOV AX, [BP - 12]
;println(a)
CALL PRINT_INT
MOV SI, -12
PUSH SI
MOV SI, -12
MOV BX, [BP + SI]
MOV AX, 2
XCHG   AX, BX
XOR DX, DX
IDIV BX
POP SI
MOV [BP + SI], AX
;a=a/2
MOV AX, [BP - 12]
;println(a)
CALL PRINT_INT
MOV SI, -12
PUSH SI
MOV SI, -12
MOV BX, [BP + SI]
MOV AX, 3
XCHG   AX, BX
XOR DX, DX
IDIV BX
MOV AX, DX
POP SI
MOV [BP + SI], AX
;a=a%3
MOV AX, [BP - 12]
;println(a)
CALL PRINT_INT
MOV SP, BP
MOV AH, 4CH
INT 21H
main ENDP



PRINT_INT PROC						

	OR AX, AX						
	JGE END_IF1						
	PUSH AX						
	MOV DL,'-'						
	MOV AH, 2						
	INT 21H						
	POP AX						
	NEG AX						

END_IF1:						
	XOR CX, CX						
	MOV BX, 10D						

REPEAT1:						
	XOR DX, DX						
	DIV BX						
	PUSH DX						
	INC CX						

	OR AX, AX						
	JNE REPEAT1						

	MOV AH, 2						

PRINT_LOOP:						
	POP DX						
	OR DL, 30H						
	INT 21H						
	LOOP PRINT_LOOP						
	MOV AH, 2						
	MOV DL, 10						
	INT 21H						

	MOV DL, 13						
	INT 21H						
	RET						
PRINT_INT ENDP

END MAIN
